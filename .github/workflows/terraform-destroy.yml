name: Terraform Destroy (manual)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Which environment to destroy?"
        type: choice
        default: prod
        options:
          - prod
      confirm:
        description: "Type EXACTLY: DESTROY-PROD-YES"
        required: true

permissions:
  id-token: write
  contents: read

env:
  # --- Repo-level Variables (Settings → Secrets and variables → Actions → Variables) ---
  AWS_REGION: ${{ vars.AWS_REGION }}
  TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET }}
  TF_LOCK_TABLE: ${{ vars.TF_LOCK_TABLE }}
  TF_DIR: ${{ vars.TF_DIR }}
  AWS_ROLE_TO_ASSUME: ${{ vars.AWS_ROLE_TO_ASSUME }}

  # Prod-only state key (matches your apply workflow)
  TF_BACKEND_KEY: ec2-demo/prod/terraform.tfstate

jobs:
  destroy:
    # Optional: require a protected GitHub Environment named "prod" with approvals
    environment: ${{ inputs.environment }}

    runs-on: ubuntu-latest
    concurrency:
      group: terraform-destroy-prod
      cancel-in-progress: false

    steps:
      - name: Safety gate
        run: |
          if [ "${{ github.event.inputs.environment }}" != "prod" ]; then
            echo "This workflow currently supports prod only."; exit 1
          fi

          if [ "${{ github.event.inputs.confirm }}" != "DESTROY-PROD-YES" ]; then
            echo "Confirmation phrase mismatch. Aborting."; exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (prod backend)
        run: |
          terraform -chdir=$TF_DIR init \
            -backend-config="bucket=$TF_STATE_BUCKET" \
            -backend-config="region=$AWS_REGION" \
            -backend-config="dynamodb_table=$TF_LOCK_TABLE" \
            -backend-config="key=$TF_BACKEND_KEY"

      - name: Show What Will Be Destroyed (Plan -destroy)
        run: terraform -chdir=$TF_DIR plan -destroy -input=false -no-color

      - name: Terraform Destroy (requires confirmation above)
        run: terraform -chdir=$TF_DIR destroy -auto-approve -input=false
